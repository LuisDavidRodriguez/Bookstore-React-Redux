// https://gosnippets.com/snippets/circular-progress-bar-using-html-css-javascript-snippet
// this item is borrow from the link above
// I understand the code and I'm adding the comments to be able
// to use and move the bar with javaScript
// principal container
@use '../../styles/functions' as f;

.circular {
  height: 100px;
  width: 100px;
  position: relative;
}

.circular .inner {
  position: absolute;
  z-index: 6;
  top: 50%;
  left: 50%;
  height: 80px;
  width: 80px;
  margin: -40px 0 0 -40px;
  background-color: #dde6f0;
  border-radius: 100%;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
}

.circular .outer {
  position: absolute;
  z-index: 6;
  height: 100%;
  width: 100%;
  border-radius: 100%;
  box-shadow: inset 0 1px 0 rgba(0, 0, 0, 0.2);
}

.circular .circle {
  z-index: 1;
  box-shadow: none;
  position: absolute;
  height: 100%;
  width: 100%;
  border-radius: 100%;
}

.circular .numb {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  font-weight: 500;
  color: f.getcolor("primary");
  font-size: 0.9em;
  text-align: center;
}

.circular .bar {
  position: absolute;
  height: 100%;
  width: 100%;
  background: #fff;
  -webkit-border-radius: 100%;
  border-radius: 100%;
  clip: rect(0, 100px, 100px, 50px);
}

.circle .bar .progress {
  position: absolute;
  height: 100%;
  width: 100%;
  -webkit-border-radius: 100%;
  border-radius: 100%;
  clip: rect(0, 50px, 100px, 0);
}

.circle .bar .progress,
.dot span {
  background: f.getcolor('primary');
}

.circle .right {
  z-index: 3;
  transform: rotate(180deg);
}

$fillSpeed: 4s;
$dotSpeed: $fillSpeed * 2;

// select this 2 for the javaScript manipulation
.circle .right .progress {
  animation: right $fillSpeed linear both;
  animation-delay: $fillSpeed;
}

.circle .left .progress {
  z-index: 1;
  animation: left $fillSpeed linear both;
}

// Luisda comments
// move this jaja this transform property check it i added this ones to check
// how to manipulate this with javaScript this is the first half so it comes from
// 0deg to 180deg this circle should start moving when the percentage of the data
// reach is from 0, so when you want to reprecent from 0% to 50% you move now this one
// so because you have 2 independent halves if you want to represent 20% you need to move this
// half the equatity if 180deg per 20% and the other half must be 0deg
// if you want to
// .circle .left .progress{
//  transform: rotate(0deg);
// }

// move this jaja this transform property check it i added this ones to check
// how to manipulate this with javaScript this is the first half so it comes from
// 0deg to 180deg this circle should start moving when the percentage of the data
// reach the 50%, so when you want to reprecent 60% you move now this one
// .circle .right .progress{
//  transform: rotate(0deg);
// }

// then if you use JavaScrip do not use this animations
// and commint it!
@keyframes left {
  100% {
    transform: rotate(180deg);
  }
}

@keyframes right {
  100% {
    transform: rotate(180deg);
  }
}

// dot progres code
.circle .dot {
  z-index: 2;
  position: absolute;
  left: 50%;
  top: 50%;
  width: 50%;
  height: 10px;
  margin-top: -5px;
  animation: dot $dotSpeed linear both;
  transform-origin: 0% 50%;
}

.circle .dot span {
  position: absolute;
  right: 0;
  width: 10px;
  height: 10px;
  border-radius: 100%;
}

// Luisda comments
// TO MOVE WITH JAVA SCRIPT maybe ignore this keyframe but continue transforming it
// and instead of keyframe we can use only a transition in the
// principal dot!
// you can create maybe pass with java script the property transform from -90 to 270deg being 100%
// being -90 0% and 270 being 100%
// .circle .dot {
//   transform: rotate(20deg);
// }

@keyframes dot {
  0% {
    transform: rotate(-90deg);
  }

  50% {
    transform: rotate(90deg);
    z-index: 4;
  }

  100% {
    transform: rotate(270deg);
    z-index: 4;
  }
}
